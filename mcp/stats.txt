Below is a comparison between:
  - Debian's cp
  - read_write cp 
  - send_file cp 
the test was done by copying a 22GB file for 10 times using bentest (my other project)
--------------------
read_write:
  user: 0.001213 	sys: 33.170163
  total time: 47.0987	CPU: 70.43%
  Context Switches:
    voluntary: 6823
    involuntary: 314
  Page Faults:
    soft: 17141
    hard: 1
  File System I/O:
    input blocks: 38585516
    output blocks: 43289201
--------------------

--------------------
send_file (22GB)
  user: 0.000840 	sys: 27.755699
  total time: 35.6275	CPU: 77.91%
  Context Switches:
    voluntary: 20706
    involuntary: 490
  Page Faults:
    soft: 76
    hard: 1
  File System I/O:
    input blocks: 38740900
    output blocks: 43289192
--------------------

--------------------
Debian Standard cp:
  user: 0.000000 	sys: 28.834670
  total time: 38.6859	CPU: 74.54%
  Context Switches:
    voluntary: 14462
    involuntary: 423
  Page Faults:
    soft: 117
    hard: 4
  File System I/O:
    input blocks: 38784474
    output blocks: 43289192
--------------------

--------------------
send large files (22GB)
  user: 0.000807 	sys: 27.322021
  total time: 59.6831	CPU: 45.78%
  Context Switches:
    voluntary: 21341
    involuntary: 566
  Page Faults:
    soft: 75
    hard: 0
  File System I/O:
    input blocks: 43288929
    output blocks: 43289192
--------------------

--------------------
Send large file fallocate (22GB)
  user: 0.000000 	sys: 23.705274
  total time: 45.6151	CPU: 51.97%
  Context Switches:
    voluntary: 30918
    involuntary: 619
  Page Faults:
    soft: 74
    hard: 1
  File System I/O:
    input blocks: 43289212
    output blocks: 43289192
--------------------
